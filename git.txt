使用git需要先在终端进行配置：
    1.name
        git config --global user.name "cuiqilin"
    2.email
        git config --global user.email "1732249216@qq.com"

使用git：
    git status：查看当前仓库状态
    git init：初始化仓库

刚刚添加到项目中的文件处于未跟踪状态
    未跟踪 --> 已跟踪的暂存状态
        git add <filename>：将文件切换到暂存状态
        git add * ：将所有已修改（未跟踪）的文件暂存
    暂存 --> 未修改
        git commit -m "xxx"：将暂存的文件存储到仓库中
            -m：message
            xxx：字符串

        git commit -a -m "xxx"：提交所有已修改的文件（未跟踪的文件不会被提交）
    未修改 --> 修改
        修改代码后，文件会变为修改状态

常用的命令
    git restore <filename> ：恢复文件
    git restore --staged <filename> ：取消暂存状态
    
    git rm <filename> ：删除文件
    git rm <filename> -f ：强制删除

    git mv from to ：移动文件/重命名文件
    
分支branch
    git在存储文件时，每一次代码提交都会创建一个与之对应的节点，git就是通过一个一个的节点记录代码的状态
        节点会构成一个树状结构，树状结构就意味着会存在分支，默认情况下仓库只有一个分支，命名为master

    在使用git时，可以创建多个分支，分支与分支之间相互独立，在分支上修改代码不会影响其他分支
        git branch ：查看当前分支
        git branch <branch name> ：创建分支
        git branch -d <branch name> ：删除分支
        git switch <branch name> ：切换到某分支
        git switch -c <branch name> ：创建并切换到某分支

    在开发中都是在自己的分支上编写代码，代码编写完成后，再将自己的分支合并到主分支中

变基：rebase
    在开发中除了使用merge来合并分支，还可以使用变基来完成分支的合并
    通过merge合并分支时，在提交记录中会将所有的分支创建和分支合并过程全部显示出来，
        当项目比较复杂，开发过程较长时，必须反复的创建合并删除分支，这样使得代码提交记录变得混乱

    原理
        1.发起变基时，git会找到分支的最近的共同祖先
        2.对比当前分支相对于祖先的历史提交，并将他们的不同存储到一个临时文件中
        3.将当前部分指向目标的基底
        4.以当前基底开始，重新执行历史操作

变基和merge对于合并分支结果来说，最终结果是一样的，但是变基后会使得代码的提交记录更整洁更清晰
    大部分情况下，变基和合并是可以互换的，但如果分支已经提交给了远程仓库，那么尽量不要使用变基

远程仓库（remote）
    -目前对于git所有的操作都是在本地进行的，开发中不能这样；这时需要一个远程的git仓库
    -远程的git仓库和本地的没有什么区别，不同点是，远程仓库可以被多人同时访问使用，方便协同开发
    -在实际工作中，git的服务器通常由公司搭建内部使用，或购买一些公共的私有git服务器
    -学习阶段，直接使用一些开放的公共的git仓库
        目前常用的库：
            1.GitHub（被微软收购了，需要翻墙）
            2.Gitee(码云，国内服务器，放一些库需要审核)

将本地库上传到git
    git remote add origin https://github.com/Giveupanything/git-demoo.git
        -git remote add <remote name> <url>
    git branch -M main
        -修改分支名字为main
    git push -u origin main
        -将代码上传到服务器上

将本地库上传到码云gitee
    git remote add origin https://gitee.com/giveupanything/git-demo.git
    git push -u origin "master"